import Head from "next/head";
import { useRouter } from "next/router";
import { firestore } from "../../firebase/admin";
import Tweet from "../../components/Tweet";
import ArrowLeft from "../../components/Icons/ArrowLeft";
import Navbar from "../../components/Navbar";

export default function TweetPage({
  user,
  content,
  createdAt,
  image,
  video,
  id,
}) {
  const router = useRouter();

  if (router.isFallback) return <h1>Cargando...</h1>;

  return (
    <>
      <Head>
        <title>{`${user.userName} en Twitter: "${content}"`}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.svg" />
      </Head>

      <header>
        <div onClick={router.back} role="button" tabIndex={0}>
          <ArrowLeft width={19} height={19} stroke="#0F1419" />
        </div>
        <h2>Tweet</h2>
      </header>
      <section>
        <Tweet {...{ avatar: user.avatar, userName: user.userName, content, createdAt, image, video, id }} />
      </section>
      <Navbar />

      <style jsx>{`
        header {
          align-items: center;
          backdrop-filter: blur(5px);
          background: #ffffffaa;
          border-bottom: 1px solid #eee;
          display: flex;
          height: 49px;
          padding: 0 15px;
          position: sticky;
          top: 0;
          width: 100%;
        }

        div {
          align-items: center;
          display: flex;
          cursor: pointer;
        }

        h2 {
          font-size: 21px;
          font-weight: 800;
          padding-left: 31px;
        }

        section {
          flex: 1;
        }
      `}</style>
    </>
  );
}

export async function getStaticPaths() {
  return {
    paths: [],
    fallback: true,
  };
}

export async function getStaticProps(context) {
  const { params } = context;
  const { id } = params;

  return firestore
    .collection("tweets")
    .doc(id)
    .get()
    .then((doc) => {
      const data = doc.data();
      const { id } = doc;
      const { createdAt } = data;

      const props = {
        ...data,
        id,
        createdAt: +createdAt.toDate(),
      };
      return { props };
    })
    .catch(() => {
      return { props: {} };
    });
}
